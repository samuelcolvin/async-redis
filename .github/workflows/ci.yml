name: CI

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request: {}

jobs:
  test:
    name: test py${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ['3.7', '3.8']

    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      COMPILED: false

    runs-on: ${{ format('{0}-latest', matrix.os) }}

    services:
      redis:
        image: redis:5
        ports:
        - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: install dependencies
      run: |
        make install
        pip freeze

    - name: generate stubs
      run: make generate-stubs

    - name: lint
      run: make lint

    - name: mypy
      run: make mypy

    - name: test
      run: |
        make test
        coverage xml

    - uses: samuelcolvin/codecov-action@env-vars
      with:
        file: ./coverage.xml
        env_vars: PYTHON,OS,COMPILED

    - name: compile
      run: |
        make compile-trace
        python -c "import sys, async_redis.version; print('compiled:', async_redis.version.COMPILED); sys.exit(0 if async_redis.version.COMPILED else 1)"
        ls -alh
        ls -alh async_redis/

    - name: test compiled
      run: |
        make test
        coverage xml

    - uses: samuelcolvin/codecov-action@env-vars
      with:
        file: ./coverage.xml
        env_vars: PYTHON,OS,COMPILED
      env:
        COMPILED: true

  benchmark:
    name: run benchmarks
    runs-on: ubuntu-latest
    env:
      BENCHMARK_REPEATS: 1

    services:
      redis:
        image: redis:5
        ports:
        - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: install and compile
      run: |
        make install
        make compile
        pip install -r benchmarks/requirements.txt

    - run: make benchmark
